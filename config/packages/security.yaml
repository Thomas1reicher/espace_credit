security:
    encoders:
        App\Entity\User: bcrypt

    providers:
        database_users:
            entity: { class: App\Entity\User, property: username }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            anonymous: true
            logout:
                path: security_logout
            guard:
                authenticators:
                    - App\Security\FormLoginAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
          - { path: ^/admin/(dashboard|comment), roles: ROLE_ADMIN }
#security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    #encoders:
        #Symfony\Component\Security\Core\User\User: plaintext

        #role_hierarchy:
          #  ROLE_ADMIN: ROLE_USER
          #  ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    #providers:
       # in_memory:
            #memory:
             #   users:
                #    user: { password: userpass, roles: [ 'ROLE_USER' ] }
                  #  admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
   # firewalls:
    #    dev:
         #   pattern: ^/(_(profiler|wdt)|css|images|js)/
         #   security: false
     #   main:
        #    anonymous: true
        #    lazy: true
        #    provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
  #  access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
